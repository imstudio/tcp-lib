// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_data.proto

#ifndef PROTOBUF_game_5fdata_2eproto__INCLUDED
#define PROTOBUF_game_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace fgame {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_game_5fdata_2eproto();
void protobuf_InitDefaults_game_5fdata_2eproto();
void protobuf_AssignDesc_game_5fdata_2eproto();
void protobuf_ShutdownFile_game_5fdata_2eproto();

class CreateRoom;
class EnterRoomData;
class SimpleData;
class SimpleResult;

// ===================================================================

class CreateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fgame.CreateRoom) */ {
 public:
  CreateRoom();
  virtual ~CreateRoom();

  CreateRoom(const CreateRoom& from);

  inline CreateRoom& operator=(const CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoom& default_instance();

  static const CreateRoom* internal_default_instance();

  void Swap(CreateRoom* other);

  // implements Message ----------------------------------------------

  inline CreateRoom* New() const { return New(NULL); }

  CreateRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRoom& from);
  void MergeFrom(const CreateRoom& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateRoom* other);
  void UnsafeMergeFrom(const CreateRoom& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // required int32 roomNumber = 2;
  bool has_roomnumber() const;
  void clear_roomnumber();
  static const int kRoomNumberFieldNumber = 2;
  ::google::protobuf::int32 roomnumber() const;
  void set_roomnumber(::google::protobuf::int32 value);

  // required int64 requestId = 3;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int64 requestid() const;
  void set_requestid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:fgame.CreateRoom)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_roomnumber();
  inline void clear_has_roomnumber();
  inline void set_has_requestid();
  inline void clear_has_requestid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomnumber_;
  ::google::protobuf::int64 requestid_;
  friend void  protobuf_InitDefaults_game_5fdata_2eproto_impl();
  friend void  protobuf_AddDesc_game_5fdata_2eproto_impl();
  friend void protobuf_AssignDesc_game_5fdata_2eproto();
  friend void protobuf_ShutdownFile_game_5fdata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateRoom> CreateRoom_default_instance_;

// -------------------------------------------------------------------

class SimpleResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fgame.SimpleResult) */ {
 public:
  SimpleResult();
  virtual ~SimpleResult();

  SimpleResult(const SimpleResult& from);

  inline SimpleResult& operator=(const SimpleResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleResult& default_instance();

  static const SimpleResult* internal_default_instance();

  void Swap(SimpleResult* other);

  // implements Message ----------------------------------------------

  inline SimpleResult* New() const { return New(NULL); }

  SimpleResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimpleResult& from);
  void MergeFrom(const SimpleResult& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SimpleResult* other);
  void UnsafeMergeFrom(const SimpleResult& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional int32 code = 2 [default = 0];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional string msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:fgame.SimpleResult)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  bool success_;
  ::google::protobuf::int32 code_;
  friend void  protobuf_InitDefaults_game_5fdata_2eproto_impl();
  friend void  protobuf_AddDesc_game_5fdata_2eproto_impl();
  friend void protobuf_AssignDesc_game_5fdata_2eproto();
  friend void protobuf_ShutdownFile_game_5fdata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SimpleResult> SimpleResult_default_instance_;

// -------------------------------------------------------------------

class EnterRoomData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fgame.EnterRoomData) */ {
 public:
  EnterRoomData();
  virtual ~EnterRoomData();

  EnterRoomData(const EnterRoomData& from);

  inline EnterRoomData& operator=(const EnterRoomData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomData& default_instance();

  static const EnterRoomData* internal_default_instance();

  void Swap(EnterRoomData* other);

  // implements Message ----------------------------------------------

  inline EnterRoomData* New() const { return New(NULL); }

  EnterRoomData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterRoomData& from);
  void MergeFrom(const EnterRoomData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterRoomData* other);
  void UnsafeMergeFrom(const EnterRoomData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userId = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fgame.EnterRoomData)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_InitDefaults_game_5fdata_2eproto_impl();
  friend void  protobuf_AddDesc_game_5fdata_2eproto_impl();
  friend void protobuf_AssignDesc_game_5fdata_2eproto();
  friend void protobuf_ShutdownFile_game_5fdata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomData> EnterRoomData_default_instance_;

// -------------------------------------------------------------------

class SimpleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fgame.SimpleData) */ {
 public:
  SimpleData();
  virtual ~SimpleData();

  SimpleData(const SimpleData& from);

  inline SimpleData& operator=(const SimpleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleData& default_instance();

  static const SimpleData* internal_default_instance();

  void Swap(SimpleData* other);

  // implements Message ----------------------------------------------

  inline SimpleData* New() const { return New(NULL); }

  SimpleData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimpleData& from);
  void MergeFrom(const SimpleData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SimpleData* other);
  void UnsafeMergeFrom(const SimpleData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // required int32 dataType = 2;
  bool has_datatype() const;
  void clear_datatype();
  static const int kDataTypeFieldNumber = 2;
  ::google::protobuf::int32 datatype() const;
  void set_datatype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fgame.SimpleData)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_datatype();
  inline void clear_has_datatype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 datatype_;
  friend void  protobuf_InitDefaults_game_5fdata_2eproto_impl();
  friend void  protobuf_AddDesc_game_5fdata_2eproto_impl();
  friend void protobuf_AssignDesc_game_5fdata_2eproto();
  friend void protobuf_ShutdownFile_game_5fdata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SimpleData> SimpleData_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoom

// required int32 userId = 1;
inline bool CreateRoom::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoom::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoom::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoom::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 CreateRoom::userid() const {
  // @@protoc_insertion_point(field_get:fgame.CreateRoom.userId)
  return userid_;
}
inline void CreateRoom::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:fgame.CreateRoom.userId)
}

// required int32 roomNumber = 2;
inline bool CreateRoom::has_roomnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoom::set_has_roomnumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoom::clear_has_roomnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoom::clear_roomnumber() {
  roomnumber_ = 0;
  clear_has_roomnumber();
}
inline ::google::protobuf::int32 CreateRoom::roomnumber() const {
  // @@protoc_insertion_point(field_get:fgame.CreateRoom.roomNumber)
  return roomnumber_;
}
inline void CreateRoom::set_roomnumber(::google::protobuf::int32 value) {
  set_has_roomnumber();
  roomnumber_ = value;
  // @@protoc_insertion_point(field_set:fgame.CreateRoom.roomNumber)
}

// required int64 requestId = 3;
inline bool CreateRoom::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoom::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoom::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoom::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::int64 CreateRoom::requestid() const {
  // @@protoc_insertion_point(field_get:fgame.CreateRoom.requestId)
  return requestid_;
}
inline void CreateRoom::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:fgame.CreateRoom.requestId)
}

inline const CreateRoom* CreateRoom::internal_default_instance() {
  return &CreateRoom_default_instance_.get();
}
// -------------------------------------------------------------------

// SimpleResult

// optional bool success = 1;
inline bool SimpleResult::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleResult::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleResult::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleResult::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool SimpleResult::success() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleResult.success)
  return success_;
}
inline void SimpleResult::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:fgame.SimpleResult.success)
}

// optional int32 code = 2 [default = 0];
inline bool SimpleResult::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimpleResult::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimpleResult::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimpleResult::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 SimpleResult::code() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleResult.code)
  return code_;
}
inline void SimpleResult::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:fgame.SimpleResult.code)
}

// optional string msg = 3;
inline bool SimpleResult::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimpleResult::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimpleResult::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimpleResult::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& SimpleResult::msg() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleResult.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleResult::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fgame.SimpleResult.msg)
}
inline void SimpleResult::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fgame.SimpleResult.msg)
}
inline void SimpleResult::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fgame.SimpleResult.msg)
}
inline ::std::string* SimpleResult::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:fgame.SimpleResult.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimpleResult::release_msg() {
  // @@protoc_insertion_point(field_release:fgame.SimpleResult.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleResult::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:fgame.SimpleResult.msg)
}

inline const SimpleResult* SimpleResult::internal_default_instance() {
  return &SimpleResult_default_instance_.get();
}
// -------------------------------------------------------------------

// EnterRoomData

// required int32 userId = 2;
inline bool EnterRoomData::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomData::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomData::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomData::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 EnterRoomData::userid() const {
  // @@protoc_insertion_point(field_get:fgame.EnterRoomData.userId)
  return userid_;
}
inline void EnterRoomData::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:fgame.EnterRoomData.userId)
}

inline const EnterRoomData* EnterRoomData::internal_default_instance() {
  return &EnterRoomData_default_instance_.get();
}
// -------------------------------------------------------------------

// SimpleData

// required int32 userId = 1;
inline bool SimpleData::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleData::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleData::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleData::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 SimpleData::userid() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleData.userId)
  return userid_;
}
inline void SimpleData::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:fgame.SimpleData.userId)
}

// required int32 dataType = 2;
inline bool SimpleData::has_datatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimpleData::set_has_datatype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimpleData::clear_has_datatype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimpleData::clear_datatype() {
  datatype_ = 0;
  clear_has_datatype();
}
inline ::google::protobuf::int32 SimpleData::datatype() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleData.dataType)
  return datatype_;
}
inline void SimpleData::set_datatype(::google::protobuf::int32 value) {
  set_has_datatype();
  datatype_ = value;
  // @@protoc_insertion_point(field_set:fgame.SimpleData.dataType)
}

inline const SimpleData* SimpleData::internal_default_instance() {
  return &SimpleData_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace fgame

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fdata_2eproto__INCLUDED
