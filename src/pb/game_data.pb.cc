// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace fgame {

namespace {

const ::google::protobuf::Descriptor* CreateRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* SimpleResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SimpleResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterRoomData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterRoomData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_5fdata_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_game_5fdata_2eproto() {
  protobuf_AddDesc_game_5fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_data.proto");
  GOOGLE_CHECK(file != NULL);
  CreateRoom_descriptor_ = file->message_type(0);
  static const int CreateRoom_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoom, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoom, roomnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoom, requestid_),
  };
  CreateRoom_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateRoom_descriptor_,
      CreateRoom::internal_default_instance(),
      CreateRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoom, _has_bits_),
      -1,
      -1,
      sizeof(CreateRoom),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoom, _internal_metadata_));
  SimpleResult_descriptor_ = file->message_type(1);
  static const int SimpleResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleResult, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleResult, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleResult, msg_),
  };
  SimpleResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SimpleResult_descriptor_,
      SimpleResult::internal_default_instance(),
      SimpleResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleResult, _has_bits_),
      -1,
      -1,
      sizeof(SimpleResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleResult, _internal_metadata_));
  EnterRoomData_descriptor_ = file->message_type(2);
  static const int EnterRoomData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomData, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomData, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomData, userid_),
  };
  EnterRoomData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterRoomData_descriptor_,
      EnterRoomData::internal_default_instance(),
      EnterRoomData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomData, _has_bits_),
      -1,
      -1,
      sizeof(EnterRoomData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomData, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateRoom_descriptor_, CreateRoom::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SimpleResult_descriptor_, SimpleResult::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterRoomData_descriptor_, EnterRoomData::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_5fdata_2eproto() {
  CreateRoom_default_instance_.Shutdown();
  delete CreateRoom_reflection_;
  SimpleResult_default_instance_.Shutdown();
  delete SimpleResult_reflection_;
  EnterRoomData_default_instance_.Shutdown();
  delete EnterRoomData_reflection_;
}

void protobuf_InitDefaults_game_5fdata_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CreateRoom_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SimpleResult_default_instance_.DefaultConstruct();
  EnterRoomData_default_instance_.DefaultConstruct();
  CreateRoom_default_instance_.get_mutable()->InitAsDefaultInstance();
  SimpleResult_default_instance_.get_mutable()->InitAsDefaultInstance();
  EnterRoomData_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_game_5fdata_2eproto_once_);
void protobuf_InitDefaults_game_5fdata_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_game_5fdata_2eproto_once_,
                 &protobuf_InitDefaults_game_5fdata_2eproto_impl);
}
void protobuf_AddDesc_game_5fdata_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_game_5fdata_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017game_data.proto\022\005fgame\"C\n\nCreateRoom\022\016"
    "\n\006userId\030\001 \002(\005\022\022\n\nroomNumber\030\002 \002(\005\022\021\n\tre"
    "questId\030\003 \002(\003\"=\n\014SimpleResult\022\017\n\007success"
    "\030\001 \001(\010\022\017\n\004code\030\002 \001(\005:\0010\022\013\n\003msg\030\003 \001(\t\">\n\r"
    "EnterRoomData\022\r\n\005reqId\030\001 \002(\005\022\016\n\006roomId\030\002"
    " \002(\005\022\016\n\006userId\030\003 \002(\005", 220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_data.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5fdata_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_game_5fdata_2eproto_once_);
void protobuf_AddDesc_game_5fdata_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_game_5fdata_2eproto_once_,
                 &protobuf_AddDesc_game_5fdata_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5fdata_2eproto {
  StaticDescriptorInitializer_game_5fdata_2eproto() {
    protobuf_AddDesc_game_5fdata_2eproto();
  }
} static_descriptor_initializer_game_5fdata_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoom::kUserIdFieldNumber;
const int CreateRoom::kRoomNumberFieldNumber;
const int CreateRoom::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoom::CreateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_5fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:fgame.CreateRoom)
}

void CreateRoom::InitAsDefaultInstance() {
}

CreateRoom::CreateRoom(const CreateRoom& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fgame.CreateRoom)
}

void CreateRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&userid_, 0, reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&userid_) + sizeof(requestid_));
}

CreateRoom::~CreateRoom() {
  // @@protoc_insertion_point(destructor:fgame.CreateRoom)
  SharedDtor();
}

void CreateRoom::SharedDtor() {
}

void CreateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateRoom_descriptor_;
}

const CreateRoom& CreateRoom::default_instance() {
  protobuf_InitDefaults_game_5fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateRoom> CreateRoom_default_instance_;

CreateRoom* CreateRoom::New(::google::protobuf::Arena* arena) const {
  CreateRoom* n = new CreateRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:fgame.CreateRoom)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateRoom, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateRoom*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, requestid_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fgame.CreateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (tag == 8) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_roomNumber;
        break;
      }

      // required int32 roomNumber = 2;
      case 2: {
        if (tag == 16) {
         parse_roomNumber:
          set_has_roomnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomnumber_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_requestId;
        break;
      }

      // required int64 requestId = 3;
      case 3: {
        if (tag == 24) {
         parse_requestId:
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fgame.CreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fgame.CreateRoom)
  return false;
#undef DO_
}

void CreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fgame.CreateRoom)
  // required int32 userId = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // required int32 roomNumber = 2;
  if (has_roomnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomnumber(), output);
  }

  // required int64 requestId = 3;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->requestid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fgame.CreateRoom)
}

::google::protobuf::uint8* CreateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fgame.CreateRoom)
  // required int32 userId = 1;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // required int32 roomNumber = 2;
  if (has_roomnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomnumber(), target);
  }

  // required int64 requestId = 3;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->requestid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fgame.CreateRoom)
  return target;
}

size_t CreateRoom::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fgame.CreateRoom)
  size_t total_size = 0;

  if (has_userid()) {
    // required int32 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  if (has_roomnumber()) {
    // required int32 roomNumber = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomnumber());
  }

  if (has_requestid()) {
    // required int64 requestId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->requestid());
  }

  return total_size;
}
size_t CreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fgame.CreateRoom)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

    // required int32 roomNumber = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomnumber());

    // required int64 requestId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->requestid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fgame.CreateRoom)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fgame.CreateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fgame.CreateRoom)
    UnsafeMergeFrom(*source);
  }
}

void CreateRoom::MergeFrom(const CreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fgame.CreateRoom)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateRoom::UnsafeMergeFrom(const CreateRoom& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_roomnumber()) {
      set_roomnumber(from.roomnumber());
    }
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fgame.CreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoom::CopyFrom(const CreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fgame.CreateRoom)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CreateRoom::Swap(CreateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoom::InternalSwap(CreateRoom* other) {
  std::swap(userid_, other->userid_);
  std::swap(roomnumber_, other->roomnumber_);
  std::swap(requestid_, other->requestid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateRoom_descriptor_;
  metadata.reflection = CreateRoom_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoom

// required int32 userId = 1;
bool CreateRoom::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateRoom::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateRoom::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateRoom::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
::google::protobuf::int32 CreateRoom::userid() const {
  // @@protoc_insertion_point(field_get:fgame.CreateRoom.userId)
  return userid_;
}
void CreateRoom::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:fgame.CreateRoom.userId)
}

// required int32 roomNumber = 2;
bool CreateRoom::has_roomnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateRoom::set_has_roomnumber() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateRoom::clear_has_roomnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateRoom::clear_roomnumber() {
  roomnumber_ = 0;
  clear_has_roomnumber();
}
::google::protobuf::int32 CreateRoom::roomnumber() const {
  // @@protoc_insertion_point(field_get:fgame.CreateRoom.roomNumber)
  return roomnumber_;
}
void CreateRoom::set_roomnumber(::google::protobuf::int32 value) {
  set_has_roomnumber();
  roomnumber_ = value;
  // @@protoc_insertion_point(field_set:fgame.CreateRoom.roomNumber)
}

// required int64 requestId = 3;
bool CreateRoom::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateRoom::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateRoom::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateRoom::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
::google::protobuf::int64 CreateRoom::requestid() const {
  // @@protoc_insertion_point(field_get:fgame.CreateRoom.requestId)
  return requestid_;
}
void CreateRoom::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:fgame.CreateRoom.requestId)
}

inline const CreateRoom* CreateRoom::internal_default_instance() {
  return &CreateRoom_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimpleResult::kSuccessFieldNumber;
const int SimpleResult::kCodeFieldNumber;
const int SimpleResult::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimpleResult::SimpleResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_5fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:fgame.SimpleResult)
}

void SimpleResult::InitAsDefaultInstance() {
}

SimpleResult::SimpleResult(const SimpleResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fgame.SimpleResult)
}

void SimpleResult::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_, 0, reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&success_) + sizeof(code_));
}

SimpleResult::~SimpleResult() {
  // @@protoc_insertion_point(destructor:fgame.SimpleResult)
  SharedDtor();
}

void SimpleResult::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SimpleResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SimpleResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SimpleResult_descriptor_;
}

const SimpleResult& SimpleResult::default_instance() {
  protobuf_InitDefaults_game_5fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SimpleResult> SimpleResult_default_instance_;

SimpleResult* SimpleResult::New(::google::protobuf::Arena* arena) const {
  SimpleResult* n = new SimpleResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SimpleResult::Clear() {
// @@protoc_insertion_point(message_clear_start:fgame.SimpleResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SimpleResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SimpleResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(success_, code_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SimpleResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fgame.SimpleResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_code;
        break;
      }

      // optional int32 code = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_code:
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (tag == 26) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fgame.SimpleResult.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fgame.SimpleResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fgame.SimpleResult)
  return false;
#undef DO_
}

void SimpleResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fgame.SimpleResult)
  // optional bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional int32 code = 2 [default = 0];
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fgame.SimpleResult.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fgame.SimpleResult)
}

::google::protobuf::uint8* SimpleResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fgame.SimpleResult)
  // optional bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional int32 code = 2 [default = 0];
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fgame.SimpleResult.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fgame.SimpleResult)
  return target;
}

size_t SimpleResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fgame.SimpleResult)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

    // optional int32 code = 2 [default = 0];
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SimpleResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fgame.SimpleResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SimpleResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimpleResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fgame.SimpleResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fgame.SimpleResult)
    UnsafeMergeFrom(*source);
  }
}

void SimpleResult::MergeFrom(const SimpleResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fgame.SimpleResult)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SimpleResult::UnsafeMergeFrom(const SimpleResult& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SimpleResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fgame.SimpleResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleResult::CopyFrom(const SimpleResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fgame.SimpleResult)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SimpleResult::IsInitialized() const {

  return true;
}

void SimpleResult::Swap(SimpleResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimpleResult::InternalSwap(SimpleResult* other) {
  std::swap(success_, other->success_);
  std::swap(code_, other->code_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SimpleResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SimpleResult_descriptor_;
  metadata.reflection = SimpleResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SimpleResult

// optional bool success = 1;
bool SimpleResult::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SimpleResult::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void SimpleResult::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void SimpleResult::clear_success() {
  success_ = false;
  clear_has_success();
}
bool SimpleResult::success() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleResult.success)
  return success_;
}
void SimpleResult::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:fgame.SimpleResult.success)
}

// optional int32 code = 2 [default = 0];
bool SimpleResult::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SimpleResult::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
void SimpleResult::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void SimpleResult::clear_code() {
  code_ = 0;
  clear_has_code();
}
::google::protobuf::int32 SimpleResult::code() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleResult.code)
  return code_;
}
void SimpleResult::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:fgame.SimpleResult.code)
}

// optional string msg = 3;
bool SimpleResult::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SimpleResult::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
void SimpleResult::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
void SimpleResult::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& SimpleResult::msg() const {
  // @@protoc_insertion_point(field_get:fgame.SimpleResult.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SimpleResult::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fgame.SimpleResult.msg)
}
void SimpleResult::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fgame.SimpleResult.msg)
}
void SimpleResult::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fgame.SimpleResult.msg)
}
::std::string* SimpleResult::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:fgame.SimpleResult.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SimpleResult::release_msg() {
  // @@protoc_insertion_point(field_release:fgame.SimpleResult.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SimpleResult::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:fgame.SimpleResult.msg)
}

inline const SimpleResult* SimpleResult::internal_default_instance() {
  return &SimpleResult_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomData::kReqIdFieldNumber;
const int EnterRoomData::kRoomIdFieldNumber;
const int EnterRoomData::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomData::EnterRoomData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_5fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:fgame.EnterRoomData)
}

void EnterRoomData::InitAsDefaultInstance() {
}

EnterRoomData::EnterRoomData(const EnterRoomData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fgame.EnterRoomData)
}

void EnterRoomData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&reqid_, 0, reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&reqid_) + sizeof(userid_));
}

EnterRoomData::~EnterRoomData() {
  // @@protoc_insertion_point(destructor:fgame.EnterRoomData)
  SharedDtor();
}

void EnterRoomData::SharedDtor() {
}

void EnterRoomData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoomData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterRoomData_descriptor_;
}

const EnterRoomData& EnterRoomData::default_instance() {
  protobuf_InitDefaults_game_5fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EnterRoomData> EnterRoomData_default_instance_;

EnterRoomData* EnterRoomData::New(::google::protobuf::Arena* arena) const {
  EnterRoomData* n = new EnterRoomData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoomData::Clear() {
// @@protoc_insertion_point(message_clear_start:fgame.EnterRoomData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EnterRoomData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EnterRoomData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(reqid_, userid_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnterRoomData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fgame.EnterRoomData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 reqId = 1;
      case 1: {
        if (tag == 8) {
          set_has_reqid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reqid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_roomId;
        break;
      }

      // required int32 roomId = 2;
      case 2: {
        if (tag == 16) {
         parse_roomId:
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        break;
      }

      // required int32 userId = 3;
      case 3: {
        if (tag == 24) {
         parse_userId:
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fgame.EnterRoomData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fgame.EnterRoomData)
  return false;
#undef DO_
}

void EnterRoomData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fgame.EnterRoomData)
  // required int32 reqId = 1;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reqid(), output);
  }

  // required int32 roomId = 2;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomid(), output);
  }

  // required int32 userId = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fgame.EnterRoomData)
}

::google::protobuf::uint8* EnterRoomData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fgame.EnterRoomData)
  // required int32 reqId = 1;
  if (has_reqid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reqid(), target);
  }

  // required int32 roomId = 2;
  if (has_roomid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomid(), target);
  }

  // required int32 userId = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fgame.EnterRoomData)
  return target;
}

size_t EnterRoomData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fgame.EnterRoomData)
  size_t total_size = 0;

  if (has_reqid()) {
    // required int32 reqId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reqid());
  }

  if (has_roomid()) {
    // required int32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  if (has_userid()) {
    // required int32 userId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  return total_size;
}
size_t EnterRoomData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fgame.EnterRoomData)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 reqId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reqid());

    // required int32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());

    // required int32 userId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoomData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fgame.EnterRoomData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EnterRoomData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fgame.EnterRoomData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fgame.EnterRoomData)
    UnsafeMergeFrom(*source);
  }
}

void EnterRoomData::MergeFrom(const EnterRoomData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fgame.EnterRoomData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EnterRoomData::UnsafeMergeFrom(const EnterRoomData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void EnterRoomData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fgame.EnterRoomData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomData::CopyFrom(const EnterRoomData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fgame.EnterRoomData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EnterRoomData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void EnterRoomData::Swap(EnterRoomData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomData::InternalSwap(EnterRoomData* other) {
  std::swap(reqid_, other->reqid_);
  std::swap(roomid_, other->roomid_);
  std::swap(userid_, other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoomData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterRoomData_descriptor_;
  metadata.reflection = EnterRoomData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomData

// required int32 reqId = 1;
bool EnterRoomData::has_reqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterRoomData::set_has_reqid() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterRoomData::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterRoomData::clear_reqid() {
  reqid_ = 0;
  clear_has_reqid();
}
::google::protobuf::int32 EnterRoomData::reqid() const {
  // @@protoc_insertion_point(field_get:fgame.EnterRoomData.reqId)
  return reqid_;
}
void EnterRoomData::set_reqid(::google::protobuf::int32 value) {
  set_has_reqid();
  reqid_ = value;
  // @@protoc_insertion_point(field_set:fgame.EnterRoomData.reqId)
}

// required int32 roomId = 2;
bool EnterRoomData::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterRoomData::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterRoomData::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterRoomData::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
::google::protobuf::int32 EnterRoomData::roomid() const {
  // @@protoc_insertion_point(field_get:fgame.EnterRoomData.roomId)
  return roomid_;
}
void EnterRoomData::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:fgame.EnterRoomData.roomId)
}

// required int32 userId = 3;
bool EnterRoomData::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EnterRoomData::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
void EnterRoomData::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
void EnterRoomData::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
::google::protobuf::int32 EnterRoomData::userid() const {
  // @@protoc_insertion_point(field_get:fgame.EnterRoomData.userId)
  return userid_;
}
void EnterRoomData::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:fgame.EnterRoomData.userId)
}

inline const EnterRoomData* EnterRoomData::internal_default_instance() {
  return &EnterRoomData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace fgame

// @@protoc_insertion_point(global_scope)
